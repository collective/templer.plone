# -*- coding: utf-8 -*-
from zope.component import queryUtility

from plone.tiles.interfaces import ITileType
import unittest2 as unittest

from plone.app.testing import (
    TEST_USER_ID,
    TEST_USER_NAME,
    setRoles,
    login
)

from plone.registry.interfaces import IRegistry

from ${namespace_package}.${package}.testing import \
    ${namespace_package_uppercase}_${package_uppercase}_INTEGRATION_TESTING


class ${tile_classname}IntegrationTest(unittest.TestCase):

    layer = ${namespace_package_uppercase}_${package_uppercase}_INTEGRATION_TESTING

    def setUp(self):
        self.portal = self.layer['portal']
        self.request = self.layer['request']
        setRoles(self.portal, TEST_USER_ID, ['Manager'])
        login(self.portal, TEST_USER_NAME)
        self.portal.invokeFactory('Document', 'doc')
        self.doc = self.portal.doc

    def test_tile_exists(self):
        from ${namespace_package}.${package}.tile import ${tile_classname}
        self.assertTrue(${tile_classname}(self.portal, self.request))

    def test_file_rendering(self):
        from ${namespace_package}.${package}.tile import ${tile_classname}
        self.assertEqual(
            ${tile_classname}(self.portal, self.request)(),
            u"<html><body><p>Hello world</p></body></html>")

    def test_tiletype_registration(self):
        self.assertTrue(queryUtility(ITileType, name='${namespace_package}.${package}'))
        self.assertEqual(
            queryUtility(ITileType, name='${namespace_package}.${package}').title,
            "${tile_title}")

    def test_tile_registration(self):
        registry = queryUtility(IRegistry)
        self.assertTrue(u'${namespace_package}.${package}' in registry['plone.app.tiles'])


def test_suite():
    return unittest.defaultTestLoader.loadTestsFromName(__name__)
