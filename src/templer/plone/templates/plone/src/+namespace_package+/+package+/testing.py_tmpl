from plone.app.testing import PloneSandboxLayer
from plone.app.testing import applyProfile
from plone.app.testing import PLONE_FIXTURE
from plone.app.testing import IntegrationTesting
from plone.app.testing import FunctionalTesting

from plone.testing import z2

from zope.configuration import xmlconfig


class ${classname}Layer(PloneSandboxLayer):

    defaultBases = (PLONE_FIXTURE,)

    def setUpZope(self, app, configurationContext):
        # Load ZCML
        import ${namespace_package}.${package}
        xmlconfig.file(
            'configure.zcml',
            ${namespace_package}.${package},
            context=configurationContext
        )

        # Install products that use an old-style initialize() function
        #z2.installProduct(app, 'Products.PloneFormGen')

#    def tearDownZope(self, app):
#        # Uninstall products installed above
#        z2.uninstallProduct(app, 'Products.PloneFormGen')

#if str($add_profile) == 'True'
    def setUpPloneSite(self, portal):
        applyProfile(portal, '${namespace_package}.${package}:default')
#end if

${namespace_package.upper()}_${package.upper()}_FIXTURE = ${classname}Layer()
${namespace_package.upper()}_${package.upper()}_INTEGRATION_TESTING = IntegrationTesting(
    bases=(${namespace_package.upper()}_${package.upper()}_FIXTURE,),
    name="${classname}Layer:Integration"
)
${namespace_package.upper()}_${package.upper()}_FUNCTIONAL_TESTING = FunctionalTesting(
    bases=(${namespace_package.upper()}_${package.upper()}_FIXTURE, z2.ZSERVER_FIXTURE),
    name="${classname}Layer:Functional"
)
